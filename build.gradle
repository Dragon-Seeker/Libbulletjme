apply plugin: 'cpp'
apply plugin: 'java' // for IDE access

def javaHome = org.gradle.internal.jvm.Jvm.current().javaHome.absolutePath

model {
    platforms {
        Linux32 {
            architecture 'x86'
            operatingSystem 'linux'
        }
        Linux64 {
            architecture 'x86_64'
            operatingSystem 'linux'
        }
        OSX32 {
            architecture 'x86'
            operatingSystem 'osx'
        }
        OSX64 {
            architecture 'x86_64'
            operatingSystem 'osx'
        }
        Windows32 {
            architecture 'x86'
            operatingSystem 'windows'
        }
        Windows64 {
            architecture 'x86_64'
            operatingSystem 'windows'
        }
    }

    components {
        bulletjme(NativeLibrarySpec) {
            targetPlatform 'Windows32'
            targetPlatform 'Windows64'
            targetPlatform 'Linux32'
            targetPlatform 'Linux64'
            targetPlatform 'OSX32'
            targetPlatform 'OSX64'

            sources {
                cpp {
                    source {
                        srcDir 'src/native/bullet3'
                        srcDir 'src/native/glue'
                        include '**/*.cpp'
                    }
                }
            }

            binaries.withType(StaticLibraryBinarySpec) {
                buildable = false
            }
            binaries.withType(SharedLibraryBinarySpec) {
                if (toolChain in VisualCpp) {
                    cppCompiler.define('WIN32')
                    cppCompiler.args("/I$javaHome/include")
                    cppCompiler.args("/I$javaHome/include/win32")
                    cppCompiler.args("/I$projectDir/src/native/bullet3")

                } else {
                    cppCompiler.args '-I', "$javaHome/include"
                    cppCompiler.args '-I', "$projectDir/src/native/bullet3"
                    cppCompiler.args '-Ofast'
                    cppCompiler.args '-U_FORTIFY_SOURCE'

                    def os = targetPlatform.operatingSystem.name
                    if (os == 'osx') {
                        cppCompiler.args '-I', "$javaHome/include/darwin"
                    } else if (os == 'linux') {
                        cppCompiler.args '-I', "$javaHome/include/linux"
                        cppCompiler.args "-fPIC"
                        cppCompiler.args "-fpermissive"
                        cppCompiler.args "-fvisibility=hidden"
                        linker.args "-fvisibility=hidden"
                    } else if (os == "windows") {
                        cppCompiler.define('WIN32')
                        cppCompiler.args '-I', "$javaHome/include/win32"
                        cppCompiler.args "-fpermissive"
                        cppCompiler.args "-static"
                        linker.args "-static"
                        linker.args "-Wl,--exclude-all-symbols"
                    } else {
                        buildable = false
                    }
                }
                if (buildable) {
                    task "copyToDist${targetPlatform.name}" (type: Copy, dependsOn: "bulletjme${targetPlatform.name}SharedLibrary") {
                        from sharedLibraryFile
                        def arch = targetPlatform.architecture.name
                        rename { String filename ->
                            return arch + '_' + filename
                        }
                        into 'dist'
                    }
                    jar.dependsOn("copyToDist${targetPlatform.name}");
                }
            }
        }
    }
}

sourceSets { // for IDE access
    main {
        java {
            srcDir 'src/native/bullet3'
            srcDir 'src/native/glue'
        }
    }
}
