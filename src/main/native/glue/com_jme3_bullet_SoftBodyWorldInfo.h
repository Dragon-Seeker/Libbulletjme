/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_jme3_bullet_SoftBodyWorldInfo */

#ifndef _Included_com_jme3_bullet_SoftBodyWorldInfo
#define _Included_com_jme3_bullet_SoftBodyWorldInfo
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_jme3_bullet_SoftBodyWorldInfo
 * Method:    createSoftBodyWorldInfo
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_jme3_bullet_SoftBodyWorldInfo_createSoftBodyWorldInfo
  (JNIEnv *, jobject);

/*
 * Class:     com_jme3_bullet_SoftBodyWorldInfo
 * Method:    finalizeNative
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_SoftBodyWorldInfo_finalizeNative
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_jme3_bullet_SoftBodyWorldInfo
 * Method:    getAirDensity
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_jme3_bullet_SoftBodyWorldInfo_getAirDensity
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_jme3_bullet_SoftBodyWorldInfo
 * Method:    getGravity
 * Signature: (JLcom/jme3/math/Vector3f;)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_SoftBodyWorldInfo_getGravity
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     com_jme3_bullet_SoftBodyWorldInfo
 * Method:    getMaxDisplacement
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_jme3_bullet_SoftBodyWorldInfo_getMaxDisplacement
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_jme3_bullet_SoftBodyWorldInfo
 * Method:    getWaterDensity
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_jme3_bullet_SoftBodyWorldInfo_getWaterDensity
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_jme3_bullet_SoftBodyWorldInfo
 * Method:    getWaterNormal
 * Signature: (JLcom/jme3/math/Vector3f;)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_SoftBodyWorldInfo_getWaterNormal
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     com_jme3_bullet_SoftBodyWorldInfo
 * Method:    getWaterOffset
 * Signature: (J)F
 */
JNIEXPORT jfloat JNICALL Java_com_jme3_bullet_SoftBodyWorldInfo_getWaterOffset
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_jme3_bullet_SoftBodyWorldInfo
 * Method:    setAirDensity
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_SoftBodyWorldInfo_setAirDensity
  (JNIEnv *, jobject, jlong, jfloat);

/*
 * Class:     com_jme3_bullet_SoftBodyWorldInfo
 * Method:    setGravity
 * Signature: (JLcom/jme3/math/Vector3f;)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_SoftBodyWorldInfo_setGravity
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     com_jme3_bullet_SoftBodyWorldInfo
 * Method:    setMaxDisplacement
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_SoftBodyWorldInfo_setMaxDisplacement
  (JNIEnv *, jobject, jlong, jfloat);

/*
 * Class:     com_jme3_bullet_SoftBodyWorldInfo
 * Method:    setSoftBodyWorldInfo
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_SoftBodyWorldInfo_setSoftBodyWorldInfo
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_jme3_bullet_SoftBodyWorldInfo
 * Method:    setWaterDensity
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_SoftBodyWorldInfo_setWaterDensity
  (JNIEnv *, jobject, jlong, jfloat);

/*
 * Class:     com_jme3_bullet_SoftBodyWorldInfo
 * Method:    setWaterNormal
 * Signature: (JLcom/jme3/math/Vector3f;)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_SoftBodyWorldInfo_setWaterNormal
  (JNIEnv *, jobject, jlong, jobject);

/*
 * Class:     com_jme3_bullet_SoftBodyWorldInfo
 * Method:    setWaterOffset
 * Signature: (JF)V
 */
JNIEXPORT void JNICALL Java_com_jme3_bullet_SoftBodyWorldInfo_setWaterOffset
  (JNIEnv *, jobject, jlong, jfloat);

#ifdef __cplusplus
}
#endif
#endif
